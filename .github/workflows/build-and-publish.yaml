---
name: Deploy to ECR

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest

    steps:

    - name: Check out code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Verify credentials
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: us-east-1
      run: |
        aws sts get-caller-identity --output text --query Account

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      with:
          registry-type: public

    - name: hello-world - Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: public.ecr.aws
        ECR_REPOSITORY: z8e9d5i4/sf-fargate-workshop-hello-world
        IMAGE_TAG: latest
      run: |
        cd 01-hello-world
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        cd ..

    - name: s3list - Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: public.ecr.aws
        ECR_REPOSITORY: z8e9d5i4/sf-fargate-workshop-s3-list
        IMAGE_TAG: latest
      run: |
        cd 02-s3-list
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        cd ..
